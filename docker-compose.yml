# docker-compose.yml
services:
  postgres:
    image: postgres:15-alpine
    container_name: cecor-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: educational_management
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/scripts/postgres-init:/docker-entrypoint-initdb.d

  mongodb:
    image: mongo:6-jammy
    container_name: cecor-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db

  redis:
    image: redis:7-alpine
    container_name: cecor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: cecor-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  # Usar a mesma imagem que o contêiner de debug
  backend:
    image: cecor-backend-debug  # Imagem que já sabemos que funciona
    container_name: cecor-backend
    command: /app/myapp  # Comando para executar o binário
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - mongodb
      - rabbitmq
    environment:
      POSTGRES_HOST: postgres  # Corrigido para usar o nome do serviço
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: educational_management
      POSTGRES_SSLMODE: disable  # Adicionado para garantir que a conexão funcione
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672

  # Manter o contêiner de debug para testes e desenvolvimento
  backend-debug:
    build:
      context: ./backend
      dockerfile: Dockerfile.debug
    container_name: cecor-backend-debug
    depends_on:
      - postgres
      - redis
      - mongodb
      - rabbitmq
    environment:
      POSTGRES_HOST: postgres  # Corrigido para usar o nome do serviço
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: educational_management
      POSTGRES_SSLMODE: disable  # Adicionado para garantir que a conexão funcione
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cecor-frontend
    ports:
      - "8880:80"
    depends_on:
      - backend

volumes:
  postgres-data:
  mongodb-data:
  redis-data:
  rabbitmq-data: